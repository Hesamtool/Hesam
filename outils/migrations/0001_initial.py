# Generated by Django 2.1.7 on 2019-05-29 15:43

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Colour',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Colour',
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Hours of level')),
                ('quest1', models.IntegerField()),
                ('quest2', models.IntegerField()),
                ('quest3', models.IntegerField()),
                ('quest4', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Level',
            },
        ),
        migrations.CreateModel(
            name='Material_proto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('density', models.IntegerField(blank=True, null=True)),
                ('temperature_fusion', models.IntegerField(blank=True, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Material proto',
            },
        ),
        migrations.CreateModel(
            name='Material_support',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('density', models.IntegerField(blank=True, null=True)),
                ('temperature_fusion', models.IntegerField(blank=True, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Material support',
            },
        ),
        migrations.CreateModel(
            name='Optical_resistance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Optical resistance',
            },
        ),
        migrations.CreateModel(
            name='Printer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('qtt_material_proto_lost', models.IntegerField(blank=True, null=True)),
                ('qtt_material_suppo_lost', models.IntegerField(blank=True, null=True)),
                ('infill_dens_suppo', models.FloatField(blank=True, null=True)),
                ('colour', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outils.Colour')),
                ('mate_proto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outils.Material_proto')),
                ('mate_suppo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='outils.Material_support')),
                ('optical_resistance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outils.Optical_resistance')),
            ],
            options={
                'verbose_name': 'Printer',
            },
        ),
        migrations.CreateModel(
            name='Printing_speed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Printing speed',
            },
        ),
        migrations.CreateModel(
            name='Prototype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('experience', models.CharField(max_length=100)),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Date de prototypage')),
                ('file', models.FileField(blank=True, null=True, upload_to='stl/', verbose_name='STL')),
                ('colour', models.CharField(blank=True, max_length=100)),
                ('surface', models.CharField(blank=True, max_length=100, null=True)),
                ('filling_proto', models.FloatField(blank=True, null=True)),
                ('thermal_resistance', models.CharField(blank=True, max_length=100, null=True)),
                ('optical_resistance', models.CharField(blank=True, max_length=100, null=True)),
                ('printing_speed', models.CharField(blank=True, max_length=100, null=True)),
                ('material_no', models.ManyToManyField(blank=True, related_name='Material_proto_no', to='outils.Material_proto')),
                ('material_yes', models.ManyToManyField(blank=True, related_name='Material_proto_yes', to='outils.Material_proto')),
            ],
            options={
                'verbose_name': 'Prototype',
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Date des calculs')),
                ('title', models.CharField(max_length=100)),
                ('price_cost', models.FloatField(blank=True, null=True)),
                ('price_mate', models.FloatField(blank=True, null=True)),
                ('volume_prototype', models.FloatField(blank=True, null=True)),
                ('volume_boundingbox', models.FloatField(blank=True, null=True)),
                ('material_cost', models.CharField(blank=True, max_length=100, null=True)),
                ('material_mate', models.CharField(blank=True, max_length=100, null=True)),
                ('printer_cost', models.CharField(blank=True, max_length=100, null=True)),
                ('printer_mate', models.CharField(blank=True, max_length=100, null=True)),
                ('volume_support_cost', models.FloatField(blank=True, null=True)),
                ('volume_support_mate', models.FloatField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
            ],
            options={
                'verbose_name': 'Result',
            },
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Sector',
            },
        ),
        migrations.CreateModel(
            name='Technology',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Technology',
            },
        ),
        migrations.CreateModel(
            name='Thermal_resistance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Thermal resistance',
            },
        ),
        migrations.CreateModel(
            name='Use',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Use',
            },
        ),
        migrations.AddField(
            model_name='prototype',
            name='sector',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outils.Sector'),
        ),
        migrations.AddField(
            model_name='prototype',
            name='technology_no',
            field=models.ManyToManyField(blank=True, related_name='Technology_no', to='outils.Technology'),
        ),
        migrations.AddField(
            model_name='prototype',
            name='technology_yes',
            field=models.ManyToManyField(blank=True, related_name='technology_yes', to='outils.Technology'),
        ),
        migrations.AddField(
            model_name='prototype',
            name='use',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outils.Use'),
        ),
        migrations.AddField(
            model_name='printer',
            name='printing_speed',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outils.Printing_speed'),
        ),
        migrations.AddField(
            model_name='printer',
            name='technology',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outils.Technology'),
        ),
        migrations.AddField(
            model_name='printer',
            name='thermal_resistance',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outils.Thermal_resistance'),
        ),
    ]
